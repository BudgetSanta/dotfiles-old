#!/bin/bash

# Navigates my comp directory tree
# compNNNN-YYsS
    # weekXX
        # lab
            # ...
    # ASSIGNMENT-NNNN-YYsS   (each assignment is submodule)
# Usage: cs CLASS_CODE [WEEK]
cs() {

    SEM="18s1"
    if [ "$#" -eq "0" ]; then                       # No args mean root of classes
        cd ~/git/
        ls
    elif [ -d ~/git/comp"$1_${SEM}" ]; then         # Class given
        cd ~/git/comp"$1_${SEM}"/
            
        if [ "$#" -eq "2" ]; then                   # Week or Assignment specified

            if [ -d week"$2"/lab ]; then            # - Week specified
                cd week"$2"/lab/
                if [ -d src ]; then
                    cd src                          # -- For Java projects
                fi
                ls

            elif [ "$2" = "ass" ]; then             # - Assignment specified
                case "$1" in
                    #CLASS_CODE)
                    #   cd ASSIGNMENT_FOLDER
                    #   ls;;
                    3231) 
                        cd Sys_Call_And_Processes-3231-18s1
                        ls;;
                    2511)
                        cd Rush_Hour-2511-18s1
                        ls;;
                    3411)
                        cd Prolog_Ass1-3411-18s1
                        ls;;
                    *) echo "Assignment NOT specified for class COMP$1";;
                esac

            else                                    # Week or assignment not found 
                echo "\"$2\" doesn't exist in comp$1_${SEM}."
                echo -n "Create 'week$2' folder? [y/N] " && read answer
                if [[ $answer == y* ]] || [[ $answer == Y* ]] ; then
                    mkcd "week$2/lab"
                fi
            fi

        else                                        # No Week or assignment specified
            ls
        fi
    else                                            # Class not found
        printf "Class \"$1\" doesn't exist.\n"
    fi
}

classes() {
    cd ~/git && ls -1d comp*
}
